upstream github {
    server unix:/tmp/sockets/unicorn.sock fail_timeout=0;

#    server 127.0.0.1:3000 fail_timeout=0;
#    server 127.0.0.1:8282 fail_timeout=0;
}

limit_zone lim  $binary_remote_addr 10m;


server {
  listen 80 default;
  server_name_in_redirect off;
  server_name vme5.wyrls.net;
  root /home/wap-prod/www/wap/public;
  client_max_body_size 4G;
  keepalive_timeout 5;
  access_log /var/log/smartwap/access.log smartwap;
  error_log /var/log/smartwap/error.log;

#statuses
  location /nginx_status {
    stub_status on;
    access_log off;
    allow 122.55.95.226;
    allow 127.0.0.1;
    deny all;
  }

#default error pages
error_page 500 502 503 504 = @error_handler;
error_page 400 403 404 = @error_handler;

#bots/spammers block ip/host must be first
  if ($http_user_agent ~ Morfeus) {
    return 404;
  }

#catchall
  location ~ /favicon.ico {
    access_log off;
    empty_gif;
  }

#  rewrite ^/icons/(\d+)/(\d+)x(\d+)$ /icons/get.php?id=$1&w=$2&h=$3 break;
#  rewrite ^/download/file/(\d+)(.*)$ /download/get.php?file_id=$1&extra=$2 break;
#  rewrite ^/download/content/(\d+)(.*)$ /download/get.php?content_id=$1&extra=$2 break;

  location / {
  # proxy_buffering off;
  # proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    default_type application/octet-stream;

    try_files /maintenance.html $uri.html $uri $uri/ @wap_handler;
  }

#error pages
  location @error_handler {
  }

#default wap handler
  location @wap_handler {
    keepalive_timeout 0;
    fastcgi_intercept_errors on;
    include fastcgi_params;
    fastcgi_pass unix:/tmp/php-fpm.sock;
  }

#content delivery
  location /cache {
    set $postURI $uri;
    set $postIP $remote_addr;
    set $postHOST $host;
    post_action @postDownload;
    root /tmp/cache;
    internal;
  }

  location @postDownload {
    proxy_pass http://127.0.0.1:8888/postDownload?domain=$postHOST&uri=$postURI;
    proxy_set_header  X-Real-IP  $postIP;
    proxy_set_header  BytesSent  $body_bytes_sent;
  }
}